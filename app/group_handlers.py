from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram import Bot, F, Router
from aiogram.filters import Command

import app.database.group_sqlite_db as gsql
import app.database.sqlite_db as sql
import app.other_func as otf
import app.keyboards as kb


router_group = Router()

totalt = 0


@router_group.message(F.text.startswith('/add_group'))
async def add_group_handler(message: Message):
    all_groups = await gsql.get_all_groups_id_gsql()

    if str(message.chat.id)[0] == '-' and str(message.text).count('+') == 1 and str(message.chat.id) not in all_groups:
        name = list(str(message.text).split('+'))[1]
        await gsql.add_group_gsql(message.chat.id, name)
        await message.answer('–ì—Ä—É–ø–ø–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞')
    else:
        if str(message.chat.id)[0] != '-':
            await message.answer('–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–µ')
        elif str(message.chat.id) in all_groups:
            await message.answer('–í–∞—à–∞ –≥—Ä—É–ø–ø–∞ —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞, –≤—ã –º–æ–∂–µ—Ç–µ —Ç–æ–ª—å–∫–æ –∏–∑–º–µ–Ω–∏—Ç—å –µ—ë –∏–º—è –≤–≤–µ–¥—è –∫–æ–º–∞–Ω–¥—É /rename+–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã')
        elif str(message.text).count('+') != 1:
            await message.answer('–í—ã –≤–≤–µ–ª–∏ –∫–æ–º–∞–Ω–¥—É –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ. –ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–∏–¥:\n/add_group+–ù–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã(–≥—Ä—É–ø–ø—ã)\n\n–ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –ø—Ä–æ "+" –µ–≥–æ —Ç–æ–∂–µ –Ω–∞–¥–æ –ø–∏—Å–∞—Ç—å')



@router_group.message(F.text.startswith('/upgrade'))
async def command_upgrade_handler(message: Message, bot: Bot):
    data = await sql.get_all_id_users_sql()
    client = await sql.get_client_sql(message.from_user.id)
    if str(message.from_user.id) not in data:
        await sql.add_client_sql(message.from_user.id, message.from_user.username, message.from_user.first_name)
        await sql.create_new_table_sql(message.from_user.id)
    else:
        if message.from_user.username != client[1] or message.from_user.first_name != client[4]:
            await sql.update_username_user_sql(message.from_user.id, message.from_user.username)
            await sql.update_firstname_user_sql(message.from_user.id, message.from_user.first_name)

    all_groups = await gsql.get_all_groups_id_gsql()
    if str(message.chat.id)[0] == '-':
        if str(message.chat.id) in all_groups:    
            total_points = await otf.random_num()
            client = await sql.get_client_sql(message.from_user.id)
            columns = await gsql.get_group_columns_gsql(message.chat.id)
            if f'id_{message.from_user.id}' not in columns:
                await gsql.add_new_user_group_gsql(message.chat.id, message.from_user.id, total_points)
                await gsql.add_points_main_groups_gsql(message.chat.id, total_points)
                await sql.add_points_clients_sql(message.from_user.id, total_points)
                all_group_points = await gsql.get_points_group_gsql(message.chat.id, message.from_user.id)

                await bot.send_message(chat_id=message.chat.id, text=f'{client[4]} –∑–∞—á–∏—Å–ª–µ–Ω–æ {total_points} –±.\n\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤ —É –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —ç—Ç–æ–π –≥—Ä—É–ø–ø–µ: {all_group_points}', reply_to_message_id=message.message_id)
            else:
                activ = await gsql.get_activity_user_today_gsql(message.chat.id, message.from_user.id)

                if activ[0] == '0':
                    await gsql.add_points_gsql(message.chat.id, message.from_user.id, total_points)
                    await sql.add_points_clients_sql(message.from_user.id, total_points)
                    all_group_points = await gsql.get_points_group_gsql(message.chat.id, message.from_user.id)
                    await bot.send_message(chat_id=message.chat.id, text=f'{client[4]} –∑–∞—á–∏—Å–ª–µ–Ω–æ {total_points} –±.\n\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤ —É –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —ç—Ç–æ–π –≥—Ä—É–ø–ø–µ: {all_group_points}', reply_to_message_id=message.message_id)

                else:
                    await bot.send_message(chat_id=message.chat.id, text=f'–í—ã —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å –¥–∞–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π —Å–µ–≥–æ–¥–Ω—è, —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Ä–∞–∑ –≤ —Å—É—Ç–∫–∏. –í —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å –Ω–µ–π –≤ 00:00 –ø–æ –ú–°–ö. –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–±—Ä–∞—Ç—å –±–∞–ª–ª—ã, –º–æ–∂–µ—Ç–µ —Å—Ä–∞–∑–∏—Ç—å—Å—è —Å –¥—Ä—É–≥–∏–º–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ –≥—Ä—É–ø–ø—ã, –≤–≤–µ–¥—è –∫–æ–º–∞–Ω–¥—É /battle', reply_to_message_id=message.message_id)
        else:
            await message.answer('–í–∞—à–∞ –≥—Ä—É–ø–ø–∞ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å')
    else:
        await message.answer('–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–µ')



@router_group.message(F.text.startswith('/top_groups'))
async def top_global_chats_handler(message: Message):
    if str(message.chat.id)[0] == '-':
        all_chats = await gsql.all_groups_gsql()
        all_chats = sorted(all_chats, key=lambda x: int(x[2]), reverse=True)
        flag = False
        mes = '–¢–æ–ø 10 –≥—Ä—É–ø–ø –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –±–∞–ª–ª–æ–≤:\n\n'
        for i in range(0, 10):
            if len(all_chats) < i+1:
                break

            if all_chats[i][0] == str(message.chat.id):
                mes += f'{i+1} {all_chats[i][1]}(–í–∞—à–∞ –≥—Ä—É–ø–ø–∞) - {all_chats[i][2]} –±.\n'
                flag = True
            else:
                mes += f'{i+1} {all_chats[i][1]} - {all_chats[i][2]} –±.\n'

        if flag == False:
            for i in range(0, len(all_chats)):
                if all_chats[i][0] == str(message.chat.id):
                    mes += f'{i+1} {all_chats[i][1]}(–í–∞—à–∞ –≥—Ä—É–ø–ø–∞) - {all_chats[i][2]} –±.'
                    break
        await message.answer(mes)
    else:
        await message.answer('–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–µ')



@router_group.message(F.text.startswith('/top_users'))
async def top_users_handler(message: Message):
    all_groups = await gsql.get_all_groups_id_gsql()

    if str(message.chat.id)[0] == '-':
        if str(message.chat.id) in all_groups:
            all_columns = await gsql.get_group_columns_gsql(message.chat.id)
            all_users_points = await gsql.get_all_group_gsql(message.chat.id)
            users_points = {}
            for i in range(len(all_users_points[0])):
                ls = []
                if i == 0:
                    continue
                for j in range(len(all_users_points)):
                    ls.append(int(all_users_points[j][i]))
                users_points[str(all_columns[i])[3:]] = sum(ls)
            users_points = sorted(users_points.items(), key=lambda x: x[1], reverse=True)

            mes = '–¢–æ–ø 10 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —ç—Ç–æ–π –≥—Ä—É–ø–ø—ã\n\n'
            i = 1
            for key_val in users_points:
                client = await sql.get_client_sql(key_val[0])
                mes += f'{i} {client[4]} - {key_val[1]} –±.\n'
                i += 1

            await message.answer(mes)
        else:
            await message.answer('–í–∞—à–∞ –≥—Ä—É–ø–ø–∞ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å')
    else:
        await message.answer('–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–µ')



@router_group.message(F.text.startswith('/global_top_users'))
async def global_top_users_command_handler(message: Message):
    if str(message.chat.id)[0] != '-':
        clients = await sql.get_all_clients_sql()
        clients = sorted(clients, key=lambda x: int(x[5]), reverse=True)
        mes = '–¢–æ–ø 10 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –±–∞–ª–ª–æ–≤\n\n'
        flag = False

        for i in range(0, 10):
            if clients[i][0] == str(message.from_user.id):
                mes += f'{i+1}. {clients[i][4]}(–í—ã) - {clients[i][5]} –±.\n'
                flag = True
            else:
                mes += f'{i+1}. {clients[i][4]} - {clients[i][5]} –±.\n'
        if flag == False:
            for i in range(0, len(clients)):
                if message.from_user.id == clients[i][0]:
                    mes += f'{i+1}. {clients[i][4]}(–í—ã) - {clients[i][5]} –±.\n'
        await message.answer(mes)
    else:
        await message.answer('–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö —Å –±–æ—Ç–æ–º')



@router_group.message(F.text.startswith('/battle'))
async def group_battle_handler(message: Message):
    if str(message.chat.id)[0] == '-':
        data = await sql.get_all_id_users_sql()
        client = await sql.get_client_sql(message.from_user.id)
        if str(message.from_user.id) not in data:
            await sql.add_client_sql(message.from_user.id, message.from_user.username, message.from_user.first_name)
            await sql.create_new_table_sql(message.from_user.id)
        else:
            if message.from_user.username != client[1] or message.from_user.first_name != client[4]:
                await sql.update_username_user_sql(message.from_user.id, message.from_user.username)
                await sql.update_firstname_user_sql(message.from_user.id, message.from_user.first_name)

        total_points = await gsql.get_points_group_gsql(message.chat.id, message.from_user.id)
        if int(total_points) >= 5:
            await message.answer(f'‚öî{client[4]} –≤—ã–∑—ã–≤–∞–µ—Ç –Ω–∞ —Å—Ä–∞–∂–µ–Ω–∏–µ\n\nüèÜ–í—ã –º–æ–∂–µ—Ç–µ —Å—Ä–∞–∑–∏—Ç—Å—è –µ—Å–ª–∏ —É –≤–∞—Å –±–æ–ª—å—à–µ 5 –±–∞–ª–ª–æ–≤. –ï—Å–ª–∏ –≤—ã –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç–µ, –ø–æ–ª—É—á–∞–µ—Ç–µ 10 –±–∞–ª–ª–æ–≤, –µ—Å–ª–∏ –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç–µ, —Ç–µ—Ä—è–µ—Ç–µ 5 –±–∞–ª–ª–æ–≤.\n\nüé≤–†–µ—à–∞–µ—Ç –∞–±—Å–æ–ª—é—Ç–Ω—ã–π —Ä–∞–Ω–¥–æ–º!!!', reply_markup=await kb.battle_inline_kb(message.from_user.id))
        elif int(total_points) < 5:
            await message.answer('–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –±–∞–ª–ª–æ–≤, –º–∏–Ω–∏–º–∞–ª—å–Ω–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 5')
    else:
        await message.answer('–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–µ')



@router_group.callback_query(F.data.startswith('battle_kb_'))
async def battle_kb_start_handler(callback: CallbackQuery):
    await callback.answer()
    user_id = list(str(callback.data).split('_'))[2]
    total1 = await gsql.get_points_group_gsql(callback.message.chat.id, callback.from_user.id)
    total2 = await gsql.get_points_group_gsql(callback.message.chat.id, user_id)
    ls = [user_id, str(callback.from_user.id)]
    if str(callback.from_user.id) != user_id and int(total1) >= 5 and int(total2) >= 5:
        win = await otf.random_battle_num()
        if win == 0:
            await gsql.plus_minus_points_group_gsql(ls[0], callback.message.chat.id, 5)
            await sql.add_points_clients_sql(ls[0], 5)
            await gsql.plus_minus_points_group_gsql(ls[1], callback.message.chat.id, -5)
            await sql.add_points_clients_sql(ls[1], -5)
            win_client = await sql.get_client_sql(ls[0])
            loss_client = await sql.get_client_sql(ls[1])
        else:
            await gsql.plus_minus_points_group_gsql(ls[1], callback.message.chat.id, 5)
            await sql.add_points_clients_sql(ls[1], 5)
            await gsql.plus_minus_points_group_gsql(ls[0], callback.message.chat.id, -5)
            await sql.add_points_clients_sql(ls[0], -5)
            win_client = await sql.get_client_sql(ls[1])
            loss_client = await sql.get_client_sql(ls[0])

        await callback.message.edit_text(f'üèÜ–ü–æ–±–µ–¥–∏—Ç–µ–ª—å: {win_client[4]}\nüò≠–ü—Ä–æ–∏–≥—Ä–∞–≤—à–∏–π: {loss_client[4]}\n\n{win_client[4]} +5 –±.\n{loss_client[4]} -5 –±.')
    else:
        await callback.message.answer('–°—Ä–∞–∂–∞—Ç—å—Å—è –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ —Å –¥—Ä—É–≥–∏–º–∏ –∏ –µ—Å–ª–∏ –æ–±–æ–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–æ–ª—å—à–µ 5 –±–∞–ª–ª–æ–≤')


@router_group.message(F.text.startswith('/rename'))
async def rename_handler(message: Message):
    if str(message.chat.id)[0] == '-' and str(message.text).count('+') == 1:
        name = list(str(message.text).split('+'))[1]
        await gsql.rename_group_gsql(message.chat.id, name)
        await message.answer(f'–ò–º—è –≥—Ä—É–ø–ø—ã –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–æ –Ω–∞ {name}')
    else:
        if str(message.chat.id)[0] != '-':
            await message.answer('–ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–µ')
        elif str(message.text).count('+') != 1:
            await message.answer('–ö–æ–º–∞–Ω–¥–∞ –≤–≤–µ–¥–µ–Ω–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ. –ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–∏–¥:\n/rename+–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –≥—Ä—É–ø–ø—ã')



@router_group.message(F.text.startswith('/group_help'))
async def my_points_command_handler(message: Message, state: FSMContext):
    await state.clear()
    await message.answer('üë®‚Äçüíª–î–∞–Ω–Ω—ã–π –±–æ—Ç –Ω—É–∂–µ–Ω –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∫–∏ –¥–Ω–µ–≤–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏—è, –Ω–æ —Ç–∞–∫–∂–µ –≤ —ç—Ç–æ–º –±–æ—Ç–µ –µ—Å—Ç—å –º–∏–Ω–∏ –∏–≥—Ä–∞, —Å –∫–æ—Ç–æ—Ä–æ–π –≤—ã –º–æ–∂–µ—Ç–µ –∏–≥—Ä–∞—Ç—å —Å –¥—Ä—É–∑—å—è–º–∏.\n\nüìã–î–æ –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã, –≤–∞–º –Ω—É–∂–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –≥—Ä—É–ø–ø—É –∫–∞–∫ –∫–ª–∞–Ω, —á—Ç–æ–±—ã —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å, –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—É /add_group, –ø–æ—Å—Ç–∞–≤–∏—Ç—å –∑–Ω–∞–∫ "+" –∏ –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–≤–æ–µ–≥–æ –∫–ª–∞–Ω–∞. –ö–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≥–ª—è–¥–µ—Ç—å —Ç–∞–∫:\n/add_group+–ù–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –≤–∞—à–µ–≥–æ –∫–ª–∞–Ω–∞(–≥—Ä—É–ø–ø—ã)\n\nüèÜ–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞—Ç—å—Å—è –∫–∞–∫ –∏ —Å –¥—Ä—É–∑—å—è–º–∏ –≤ –≥—Ä—É–ø–ø–µ, —Ç–∞–∫ –∏ —Å –¥—Ä—É–≥–∏–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏. –ü–æ–±–µ–∂–¥–∞–µ—Ç —Ç–æ—Ç, —É –∫–æ–≥–æ –±–æ–ª—å—à–µ –±–∞–ª–ª–æ–≤. 1 —Ä–∞–∑ –≤ —Å—É—Ç–∫–∏ –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞—Ö–æ–¥–∏—Ç—å –∏ –Ω–∞–∂–∏–º–∞—Ç—å –∫–Ω–æ–ø–∫—É /upgrade –ø–æ –∫–æ—Ç–æ—Ä–æ–π –≤–∞–º –Ω–∞ —Ä–∞–Ω–¥–æ–º –±—É–¥—É—Ç –¥–∞–≤–∞—Ç—å—Å—è –±–∞–ª–ª—ã. –¢–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ —Å—Ä–∞–∂–∞—Ç—å—Å—è —Å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ –∑–∞ –±–∞–ª–ª—ã –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É /battle. –í—ã –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –ø–æ–ø—ã—Ç–∫—É –∑–∞ 10 –∑–≤—ë–∑–¥ –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É /buy\n\nüéÅ–í –±–æ—Ç–µ –∏–¥—ë—Ç –∫–æ–Ω–∫—É—Ä—Å –¥–æ 20 –∏—é–ª—è. –ì—Ä—É–ø–ø–∞ –≤ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –±–∞–ª–ª–æ–≤, –ø–æ–ª—É—á–∏—Ç 150 –∑–≤—ë–∑–¥, –∫–æ—Ç–æ—Ä—ã–µ –º—ã —Ä–∞–∑–¥–µ–ª–∏–º —Å—Ä–µ–¥–∏ 10 —Å–∞–º—ã—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≥—Ä—É–ø–ø—ã(–∫–∞–∂–¥–æ–º—É –ø–æ 15 –∑–≤—ë–∑–¥). –¢–∞–∫–∂–µ 3 —Å–∞–º—ã—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –±–∞–ª–ª–∞–º –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–º —Ç–æ–ø–µ –ø–æ–ª—É—á–∞—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ø–æ 25 –∑–≤—ë–∑–¥. –ë–∞–ª–ª—ã –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–º —Ç–æ–ø–µ  - —ç—Ç–æ —Å—É–º–º–∞ –±–∞–ª–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–æ –≤—Å–µ—Ö –≥—Ä—É–ø–ø –≤–º–µ—Å—Ç–µ–≤–∑—è—Ç—ã—Ö. –ü–æ—ç—Ç–æ–º—É —á–µ–º –≤ –±–æ–ª—å—à–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –≥—Ä—É–ø–ø –≤—ã –∏–≥—Ä–∞–µ—Ç–µ, —Ç–µ–º –±–æ–ª—å—à–µ —É –≤–∞—Å –±—É–¥–µ—Ç –±–∞–ª–ª–æ–≤ –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–º —Ç–æ–ø–µ.\n\nü§ñ–ò—Ç–æ–≥–∏ –∫–æ–Ω–∫—É—Ä—Å–∞ –±—É–¥—É—Ç 20 –∏—é–ª—è, –µ—Å–ª–∏ –≤—ã –≤—ã–π–≥—Ä–∞–µ—Ç–µ, –±–æ—Ç –≤–∞–º —Å–∞–º –ª–∏—á–Ω–æ —Å–∫–∞–∂–µ—Ç –∫—É–¥–∞ –Ω–∞–ø–∏—Å–∞—Ç—å. –ù–∞ —Ñ–µ–π–∫–æ–≤ –Ω–µ –≤–µ–¥–∏—Ç–µ—Å—å!\n\n‚ùì–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –ø–∏—à–∏—Ç–µ —Å—é–¥–∞: @TaskMasterSupportBot')



@router_group.message(F.text.startswith('/buy'))
async def donate_group_handler(message: Message, bot: Bot):
    await message.answer('–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞')



@router_group.callback_query(F.data.startswith('battle_cancel_'))
async def battle_cancel_inline_handler(callback: CallbackQuery):
    await callback.answer()
    user_id = list(str(callback.data).split('_'))[2]
    if user_id == str(callback.from_user.id):
        await callback.message.edit_text(text='–°—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ!')
    else:
        await callback.message.answer('–°—Ä–∞–∂–µ–Ω–∏–µ –º–æ–∂–µ—Ç –æ—Ç–º–µ–Ω–∏—Ç—å —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—á–∞–ª —Å—Ä–∞–∂–µ–Ω–∏–µ')